
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class DepositFrame extends javax.swing.JFrame {
    private int id = 5;
    private double cash;
    private String sql;
    private double FieldVariable;
    private int  error;
    /**
     * Creates new form DepositFrame
     */
    public DepositFrame() {
        initComponents();
    }
    
    private void TextToDouble(){
        this.FieldVariable = Double.valueOf(CashField.getText());
    }
    
    private void chechBalance(){

        if(this.cash <  this.FieldVariable && WithdrawMethod.isSelected()){
            JOptionPane.showMessageDialog(null,"Not enough funds in the account, please replenish the account");
            this.error = 1;
        }else{
            
        }
    }
    
    private void getBalance() {
        try {
            String url = "jdbc:mysql://localhost/bank_system";
            String username = "root";
            String password = "";
            
            Connection conn = DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            ResultSet rset = stmt.executeQuery ("SELECT CASH FROM users where ID=" + this.id + "" );
            while(rset.next()){
                String money = rset.getString("CASH");
                this.cash = Double.valueOf(money);
            }
            System.out.println(this.cash);
        } catch (SQLException ex) {
            Logger.getLogger(DepositFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void ClearFileds(){
        CashField.setText("");
        DepostiMethod.setText("");
        WithdrawMethod.setText("");
    }
    
    
    private String CheckMetgod(){
        
        String cash = CashField.getText();
        if(DepostiMethod.isSelected()){
            double money = Double.valueOf(cash);
            money= Math.abs(money);
            this.cash = this.cash + money;
            this.sql = "Update users SET CASH = " + this.cash + " where ID = " + this.id + "";
            JOptionPane.showMessageDialog(null,"You transferred to the account: " + this.FieldVariable+ "");
        }
        if( WithdrawMethod.isSelected() ){
            double money = Double.valueOf(cash);
            money = Math.abs(money);
            this.cash = this.cash - money;
            this.sql = "Update users SET CASH = " + this.cash + " where ID = " + this.id + "";
            JOptionPane.showMessageDialog(null,"You withdraw from account: " + this.FieldVariable+ "");
        }
        return this.sql;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DoButton = new javax.swing.JButton();
        CashField = new javax.swing.JTextField();
        DepostiMethod = new javax.swing.JRadioButton();
        WithdrawMethod = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DoButton.setText("Do");
        DoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoButtonActionPerformed(evt);
            }
        });

        DepostiMethod.setText("Deposit");

        WithdrawMethod.setText("Withdraw");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText(" ATM");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CashField)
                    .addComponent(DepostiMethod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(WithdrawMethod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(78, 78, 78))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(DoButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(CashField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DepostiMethod)
                .addGap(18, 18, 18)
                .addComponent(WithdrawMethod)
                .addGap(18, 18, 18)
                .addComponent(DoButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoButtonActionPerformed
        // TODO add your handling code here:
        Data update = new Data();
        getBalance();
        TextToDouble();
        chechBalance();
        if(this.error == 0){
            CheckMetgod();
            update.exec_sql(this.sql);
            setDefaultCloseOperation(DepositFrame.EXIT_ON_CLOSE);
            chechBalance();
        }
        dispose();
                
    }//GEN-LAST:event_DoButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DepositFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DepositFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DepositFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DepositFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DepositFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CashField;
    private javax.swing.JRadioButton DepostiMethod;
    private javax.swing.JButton DoButton;
    private javax.swing.JRadioButton WithdrawMethod;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
